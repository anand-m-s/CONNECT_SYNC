"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.userRouter = void 0;
const express_1 = __importDefault(require("express"));
const userAuthController_1 = __importDefault(require("../../../adapters/controllers/user/userAuthController"));
const userPostController_1 = __importDefault(require("../../../adapters/controllers/user/userPostController"));
const userProfileController_1 = __importDefault(require("../../../adapters/controllers/user/userProfileController"));
const userAuthMiddleware_1 = require("../middleware/userAuthMiddleware");
exports.userRouter = express_1.default.Router();
exports.userRouter.post('/register', userAuthController_1.default.registerUser);
exports.userRouter.post('/verifyOtp', userAuthController_1.default.verifyOtp);
exports.userRouter.post('/login', userAuthController_1.default.loginUser);
exports.userRouter.post('/googleAUth', userAuthController_1.default.googleAuth);
exports.userRouter.post('/resendOtp', userAuthController_1.default.resendOtp);
exports.userRouter.post('/forgotPassword', userAuthController_1.default.forgotPassword);
exports.userRouter.post('/updatePassword', userAuthController_1.default.updatePassword);
exports.userRouter.post('/savePost', userAuthMiddleware_1.protectUser, userPostController_1.default.savePost);
exports.userRouter.get('/getUserPost', userAuthMiddleware_1.protectUser, userPostController_1.default.getUserPost);
exports.userRouter.put('/editProfile', userAuthMiddleware_1.protectUser, userProfileController_1.default.updateProfile);
exports.userRouter.get('/getUserDetails', userAuthMiddleware_1.protectUser, userProfileController_1.default.getUserDetails);
exports.userRouter.get('/getAllUsers', userProfileController_1.default.getAllUserDetails);
exports.userRouter.post('/followToggle', userAuthMiddleware_1.protectUser, userProfileController_1.default.followToggle);
exports.userRouter.get('/userFeedPost', userAuthMiddleware_1.protectUser, userPostController_1.default.userFeedPost);
exports.userRouter.delete('/deletePost/:postId', userAuthMiddleware_1.protectUser, userPostController_1.default.deletePost);
exports.userRouter.put('/editPost', userAuthMiddleware_1.protectUser, userPostController_1.default.editPost);
exports.userRouter.get('/following', userAuthMiddleware_1.protectUser, userProfileController_1.default.followingData);
exports.userRouter.get('/fetchAllComments', userAuthMiddleware_1.protectUser, userPostController_1.default.allComments);
exports.userRouter.post('/AddComment', userAuthMiddleware_1.protectUser, userPostController_1.default.addComment);
exports.userRouter.post('/addReply', userAuthMiddleware_1.protectUser, userPostController_1.default.addReply);
exports.userRouter.post('/likePost', userAuthMiddleware_1.protectUser, userPostController_1.default.postLike);
exports.userRouter.get('/likeStatus', userAuthMiddleware_1.protectUser, userPostController_1.default.isLiked);
exports.userRouter.post('/report', userAuthMiddleware_1.protectUser, userPostController_1.default.postReport);
